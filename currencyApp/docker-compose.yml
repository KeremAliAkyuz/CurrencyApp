version: '3.8'
services:
  postgres:
    image: postgres:latest
    #restart: always
    environment:
      POSTGRES_USER: aliak
      POSTGRES_PASSWORD: aliak
      POSTGRES_DB: currencies
    volumes:
      - ./db_data2:/var/lib/postgresql/data
    networks:  
      elastic:
        ipv4_address: 172.24.2.2  

  python_app:
    build: ./pythonApp/
    #restart: always
    depends_on:
      - postgres
      - logstash
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: aliak
      POSTGRES_PASSWORD: aliak
      POSTGRES_DB: currencies
      LOGSTASH_HOST: logstash
      LOGSTASH_PORT: 5001
    networks:  
      elastic:
        ipv4_address: 172.24.2.3

  springboot-currencyapi:
    container_name: springboot_currencyapi
    build:
      context: ./spring
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - keycloak
      - logstash
    networks:
      elastic:
        ipv4_address: 172.24.2.4
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/currencies
      SPRING_DATASOURCE_USERNAME: aliak
      SPRING_DATASOURCE_PASSWORD: aliak
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      LOGSTASH_HOST: logstash
      LOGSTASH_PORT: 5000
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI: http://172.24.2.5:8080/realms/currency
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_CLIENT-ID: currency-api
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: http://172.24.2.5:8080/realms/currency/protocol/openid-connect/certs
    restart: on-failure
    entrypoint: [ "java", "-Xms512m", "-Xmx1g", "-jar", "app.jar", "--debug" ]

  keycloak:
    image: quay.io/keycloak/keycloak:21.0
    container_name: keycloak
    hostname: keycloak
    ports:
      - 8080:8080
    networks:
      elastic:
        ipv4_address: 172.24.2.5
    volumes:
      - ./keycloak/config:/opt/keycloak/data/import
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: 172.24.2.5
    entrypoint: [ "/opt/keycloak/bin/kc.sh", "start-dev", "--import-realm" ]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch_springboot
    environment:
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - "discovery.type=single-node"
        - xpack.security.enabled=false
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      elastic:
        ipv4_address: 172.24.2.6

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana_springboot
    ports:
        - "5601:5601"
    environment:
        ELASTICSEARCH_URL: http://elasticsearch:9200
        ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
        - elasticsearch
    networks:
      elastic:
        ipv4_address: 172.24.2.7

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash_springboot
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5001:5001/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      elastic:
        ipv4_address: 172.24.2.8
    depends_on:
      - elasticsearch
      

networks:
  elastic:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.24.2.0/16"
          gateway: "172.24.2.1"

volumes:
  elasticsearch_data:
    driver: local
  db:
    driver: local    
